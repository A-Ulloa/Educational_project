** Defining Classes, Members and Fields. **
ClassDecl:	 Inserting class 'test' into global class table.
MethodDecl:	 Inserting method 't1' with signature '' into method table for class 'test'.
MethodDecl:	 Inserting method 't2' with signature '' into method table for class 'test'.
ClassDecl:	 Generating default construction <init>() for class 'test'
ClassDecl:	 Inserting class 'Main' into global class table.
MethodDecl:	 Inserting method 'main' with signature '' into method table for class 'Main'.
ClassDecl:	 Generating default construction <init>() for class 'Main'
ClassDecl:	 Inserting class 'Object' into global class table.
ClassDecl:	 Generating default construction <init>() for class 'Object'
** Defining Classes, Members and Fields. ** DONE!
---------------------------------------------------------
** Resolving symbols and defining locals. **
ClassType:	 Setting myDecl for 'Object'
ClassType:	 Setting myDecl for 'Object'
ClassType:	 Setting myDecl for 'test'
ClassType:	 Setting myDecl for 'test'
ClassType:	 Setting myDecl for 'test'
ClassType:	 Setting myDecl for 'test'
ClassType:	 Setting myDecl for 'test'
ClassDecl:	 Visiting class 'test'
ClassType:	 Looking up class/interface 'Object' in class table.
MethodDecl:	 Creating new scope for Method 't1' with signature '' (Parameters and Locals).
Block:		 Creating new scope for Block.
MethodDecl:	 Creating new scope for Method 't2' with signature '' (Parameters and Locals).
Block:		 Creating new scope for Block.
ConstructorDecl: Creating new scope for constructor <init> with signature '' (Parameters and Locals).
ClassDecl:	 Performing tree Rewrite on test
ClassDecl:	 Visiting class 'Main'
ClassType:	 Looking up class/interface 'Object' in class table.
MethodDecl:	 Creating new scope for Method 'main' with signature '' (Parameters and Locals).
Block:		 Creating new scope for Block.
LocalDecl:	 Declaring local symbol 'i'.
ForStat:	 Creating new scope for For Statement.
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
Block:		 Creating new scope for Block.
Invocation:	 Target too complicated for now!
ClassType:	 Looking up class/interface 'test' in class table.
ForStat:	 Creating new scope for For Statement.
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
Block:		 Creating new scope for Block.
Invocation:	 Target too complicated for now!
ClassType:	 Looking up class/interface 'test' in class table.
LocalDecl:	 Declaring local symbol 't'.
ClassType:	 Looking up class/interface 'test' in class table.
ClassType:	 Looking up class/interface 'test' in class table.
ForStat:	 Creating new scope for For Statement.
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
Block:		 Creating new scope for Block.
Invocation:	 Target too complicated for now!
NameExpr:	 Looking up symbol 't'.
 Found Local Variable
ForStat:	 Creating new scope for For Statement.
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
Block:		 Creating new scope for Block.
Invocation:	 Target too complicated for now!
NameExpr:	 Looking up symbol 't'.
 Found Local Variable
ForStat:	 Creating new scope for For Statement.
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
NameExpr:	 Looking up symbol 'i'.
 Found Local Variable
Block:		 Creating new scope for Block.
ClassType:	 Looking up class/interface 'test' in class table.
ConstructorDecl: Creating new scope for constructor <init> with signature '' (Parameters and Locals).
ClassDecl:	 Performing tree Rewrite on Main
ClassDecl:	 Visiting class 'Object'
ConstructorDecl: Creating new scope for constructor <init> with signature '' (Parameters and Locals).
ClassDecl:	 Performing tree Rewrite on Object
** Resolving symbols and defining locals. ** DONE!
Phase 3 successfully terminated.
============= S = U = C = C = E = S = S =================
