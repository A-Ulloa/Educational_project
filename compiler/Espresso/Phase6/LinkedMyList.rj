.class public LinkedMyList
.super java/lang/Object
.implements MyList

.field private sz I

.field private first LMyListNode;

.field private last LMyListNode;

.method public <init>()V
	.limit stack 50
	.limit locals 1
;  (156) Constructor Declaration
;  (0) Explicit Constructor Invocation
	aload_0
	invokespecial java/lang/Object/<init>()V
;  (0) End CInvocation
;  (156) Field Init Generation Start
;  (156) Field Init Generation End
;  (158) Expression Statement
;  (158) Assignment
;  (158) This
	aload_0
;  (158) End This
;  (158) Literal
	iconst_0
;  (158) End Literal
	putfield LinkedMyList/sz I
;  (158) End Assignment
;  (158) End ExprStat
;  (159) Expression Statement
;  (159) Assignment
;  (159) This
	aload_0
;  (159) End This
;  (159) Assignment
;  (159) This
	aload_0
;  (159) End This
;  (159) Literal
	aconst_null
;  (159) End Literal
	dup_x1
	putfield LinkedMyList/first LMyListNode;
;  (159) End Assignment
	putfield LinkedMyList/last LMyListNode;
;  (159) End Assignment
;  (159) End ExprStat
	return
.end method

.method public size()I
	.limit stack 50
	.limit locals 1
;  (162) Method Declaration (size)
;  (164) Return Statement
;  (164) Field Reference
;  (164) This
	aload_0
;  (164) End This
	getfield LinkedMyList/sz I
;  (164) End FieldRef
	ireturn
;  (164) End ReturnStat
.end method

.method private getIndex(I)LMyListNode;
	.limit stack 50
	.limit locals 4
;  (167) Method Declaration (getIndex)
;  (169) If Statement
;  (169) Binary Expression
;  (169) Name Expression --
	iload_1
;  (169) End NameExpr
;  (169) Field Reference
;  (169) This
	aload_0
;  (169) End This
	getfield LinkedMyList/sz I
;  (169) End FieldRef
	if_icmpge L2
	iconst_0
	goto L3
L2:
	iconst_1
L3:
;  (169) End BinaryExpr
	ifeq L1
;  (170) Return Statement
;  (170) Literal
	aconst_null
;  (170) End Literal
	areturn
;  (170) End ReturnStat
L1:
;  (169) End IfStat
;  (172) Local Variable Declaration
;  (172) Field Reference
;  (172) This
	aload_0
;  (172) End This
	getfield LinkedMyList/first LMyListNode;
;  (172) End FieldRef
	astore_2
;  (172) End LocalDecl
;  (173) For Statement
;  (173) Local Variable Declaration
;  (173) Literal
	iconst_0
;  (173) End Literal
	istore_3
;  (173) End LocalDecl
L4:
;  (173) Binary Expression
;  (173) Name Expression --
	iload_3
;  (173) End NameExpr
;  (173) Name Expression --
	iload_1
;  (173) End NameExpr
	if_icmplt L7
	iconst_0
	goto L8
L7:
	iconst_1
L8:
;  (173) End BinaryExpr
	ifeq L5
;  (175) Expression Statement
;  (175) Assignment
;  (175) Field Reference
;  (175) Name Expression --
	aload_2
;  (175) End NameExpr
	getfield MyListNode/next LMyListNode;
;  (175) End FieldRef
	astore_2
;  (175) End Assignment
;  (175) End ExprStat
L6:
;  (173) Expression Statement
;  (173) Unary Post Expression
;  (173) Name Expression --
	iload_3
;  (173) End NameExpr
	iinc 3 1
;  (173) End UnaryPostExpr
	pop
;  (173) End ExprStat
	goto L4
L5:
;  (173) End ForStat
;  (179) Return Statement
;  (179) Name Expression --
	aload_2
;  (179) End NameExpr
	areturn
;  (179) End ReturnStat
.end method

.method public get(I)LMyObject;
	.limit stack 50
	.limit locals 2
;  (184) Method Declaration (get)
;  (186) Return Statement
;  (186) Field Reference
;  (186) Invocation
	aload_0
;  (186) Name Expression --
	iload_1
;  (186) End NameExpr
	invokevirtual LinkedMyList/getIndex(I)LMyListNode;
;  (186) End Invocation
	getfield MyListNode/value LMyObject;
;  (186) End FieldRef
	areturn
;  (186) End ReturnStat
.end method

.method public set(ILMyObject;)V
	.limit stack 50
	.limit locals 3
;  (189) Method Declaration (set)
;  (191) Expression Statement
;  (191) Assignment
;  (191) Invocation
	aload_0
;  (191) Name Expression --
	iload_1
;  (191) End NameExpr
	invokevirtual LinkedMyList/getIndex(I)LMyListNode;
;  (191) End Invocation
;  (191) Name Expression --
	aload_2
;  (191) End NameExpr
	putfield MyListNode/value LMyObject;
;  (191) End Assignment
;  (191) End ExprStat
	return
.end method

.method public add(LMyObject;)V
	.limit stack 50
	.limit locals 2
;  (194) Method Declaration (add)
;  (196) If Statement
;  (196) Binary Expression
;  (196) Field Reference
;  (196) This
	aload_0
;  (196) End This
	getfield LinkedMyList/last LMyListNode;
;  (196) End FieldRef
;  (196) Literal
	aconst_null
;  (196) End Literal
	if_acmpne L11
	iconst_0
	goto L12
L11:
	iconst_1
L12:
;  (196) End BinaryExpr
	ifeq L9
;  (198) Expression Statement
;  (198) Assignment
;  (198) Field Reference
;  (198) This
	aload_0
;  (198) End This
	getfield LinkedMyList/last LMyListNode;
;  (198) End FieldRef
;  (198) New
	new MyListNode
	dup
;  (198) Name Expression --
	aload_1
;  (198) End NameExpr
	invokespecial MyListNode/<init>(LMyObject;)V
;  (198) End New
	putfield MyListNode/next LMyListNode;
;  (198) End Assignment
;  (198) End ExprStat
;  (199) Expression Statement
;  (199) Assignment
;  (199) This
	aload_0
;  (199) End This
;  (199) Field Reference
;  (199) Field Reference
;  (199) This
	aload_0
;  (199) End This
	getfield LinkedMyList/last LMyListNode;
;  (199) End FieldRef
	getfield MyListNode/next LMyListNode;
;  (199) End FieldRef
	putfield LinkedMyList/last LMyListNode;
;  (199) End Assignment
;  (199) End ExprStat
	goto L10
L9:
;  (203) Expression Statement
;  (203) Assignment
;  (203) This
	aload_0
;  (203) End This
;  (203) Assignment
;  (203) This
	aload_0
;  (203) End This
;  (203) New
	new MyListNode
	dup
;  (203) Name Expression --
	aload_1
;  (203) End NameExpr
	invokespecial MyListNode/<init>(LMyObject;)V
;  (203) End New
	dup_x1
	putfield LinkedMyList/last LMyListNode;
;  (203) End Assignment
	putfield LinkedMyList/first LMyListNode;
;  (203) End Assignment
;  (203) End ExprStat
L10:
;  (196) End IfStat
;  (205) Expression Statement
;  (205) Unary Post Expression
;  (205) This
	aload_0
;  (205) End This
	dup
	getfield LinkedMyList/sz I
	dup_x1
	iconst_1
	iadd
	putfield LinkedMyList/sz I
;  (205) End UnaryPostExpr
	pop
;  (205) End ExprStat
	return
.end method

