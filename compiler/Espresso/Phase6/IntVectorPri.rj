.class public IntVectorPri
.super java/lang/Object

.method public init(I)LQueue;
	.limit stack 50
	.limit locals 3
;  (103) Method Declaration (init)
;  (104) Local Variable Declaration
;  (104) New
	new Queue
	dup
;  (104) Name Expression --
	iload_1
;  (104) End NameExpr
	invokespecial Queue/<init>(I)V
;  (104) End New
	astore_2
;  (104) End LocalDecl
;  (105) Return Statement
;  (105) Name Expression --
	aload_2
;  (105) End NameExpr
	areturn
;  (105) End ReturnStat
.end method

.method public empty(LQueue;)Z
	.limit stack 50
	.limit locals 2
;  (109) Method Declaration (empty)
;  (110) Return Statement
;  (110) Binary Expression
;  (110) Field Reference
;  (110) Name Expression --
	aload_1
;  (110) End NameExpr
	getfield Queue/size I
;  (110) End FieldRef
;  (110) Literal
	iconst_0
;  (110) End Literal
	if_icmpeq L1
	iconst_0
	goto L2
L1:
	iconst_1
L2:
;  (110) End BinaryExpr
	ireturn
;  (110) End ReturnStat
.end method

.method public up(LQueue;I)V
	.limit stack 50
	.limit locals 5
;  (113) Method Declaration (up)
;  (116) Expression Statement
;  (116) Assignment
;  (116) Binary Expression
;  (116) Binary Expression
;  (116) Name Expression --
	iload_2
;  (116) End NameExpr
;  (116) Literal
	iconst_1
;  (116) End Literal
	isub
;  (116) End BinaryExpr
;  (116) Literal
	iconst_2
;  (116) End Literal
	idiv
;  (116) End BinaryExpr
	istore_3
;  (116) End Assignment
;  (116) End ExprStat
;  (118) If Statement
;  (118) Binary Expression
;  (118) Binary Expression
;  (118) Name Expression --
	iload_2
;  (118) End NameExpr
;  (118) Literal
	iconst_0
;  (118) End Literal
	if_icmpgt L4
	iconst_0
	goto L5
L4:
	iconst_1
L5:
;  (118) End BinaryExpr
	dup
	ifeq L6
	pop
;  (118) Binary Expression
;  (118) Field Reference
;  (118) Invocation
;  (118) Field Reference
;  (118) Name Expression --
	aload_1
;  (118) End NameExpr
	getfield Queue/data LElist;
;  (118) End FieldRef
;  (118) Name Expression --
	iload_3
;  (118) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (118) End Invocation
	getfield Element/key I
;  (118) End FieldRef
;  (118) Field Reference
;  (118) Invocation
;  (118) Field Reference
;  (118) Name Expression --
	aload_1
;  (118) End NameExpr
	getfield Queue/data LElist;
;  (118) End FieldRef
;  (118) Name Expression --
	iload_2
;  (118) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (118) End Invocation
	getfield Element/key I
;  (118) End FieldRef
	if_icmplt L7
	iconst_0
	goto L8
L7:
	iconst_1
L8:
;  (118) End BinaryExpr
L6:
;  (118) End BinaryExpr
	ifeq L3
;  (119) Local Variable Declaration
;  (119) Invocation
;  (119) Field Reference
;  (119) Name Expression --
	aload_1
;  (119) End NameExpr
	getfield Queue/data LElist;
;  (119) End FieldRef
;  (119) Name Expression --
	iload_3
;  (119) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (119) End Invocation
	astore 4
;  (119) End LocalDecl
;  (120) Expression Statement
;  (120) Invocation
;  (120) Field Reference
;  (120) Name Expression --
	aload_1
;  (120) End NameExpr
	getfield Queue/data LElist;
;  (120) End FieldRef
;  (120) Name Expression --
	iload_3
;  (120) End NameExpr
;  (120) Invocation
;  (120) Field Reference
;  (120) Name Expression --
	aload_1
;  (120) End NameExpr
	getfield Queue/data LElist;
;  (120) End FieldRef
;  (120) Name Expression --
	iload_2
;  (120) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (120) End Invocation
	invokevirtual Elist/put(ILElement;)V
;  (120) End Invocation
;  (120) End ExprStat
;  (121) Expression Statement
;  (121) Invocation
;  (121) Field Reference
;  (121) Name Expression --
	aload_1
;  (121) End NameExpr
	getfield Queue/data LElist;
;  (121) End FieldRef
;  (121) Name Expression --
	iload_2
;  (121) End NameExpr
;  (121) Name Expression --
	aload 4
;  (121) End NameExpr
	invokevirtual Elist/put(ILElement;)V
;  (121) End Invocation
;  (121) End ExprStat
;  (122) Expression Statement
;  (122) Invocation
	aload_0
;  (122) Name Expression --
	aload_1
;  (122) End NameExpr
;  (122) Name Expression --
	iload_3
;  (122) End NameExpr
	invokevirtual IntVectorPri/up(LQueue;I)V
;  (122) End Invocation
;  (122) End ExprStat
L3:
;  (118) End IfStat
	return
.end method

.method public insert(LQueue;LIntVector;I)V
	.limit stack 50
	.limit locals 4
;  (126) Method Declaration (insert)
;  (127) If Statement
;  (127) Binary Expression
;  (127) Field Reference
;  (127) Name Expression --
	aload_1
;  (127) End NameExpr
	getfield Queue/size I
;  (127) End FieldRef
;  (127) Field Reference
;  (127) Name Expression --
	aload_1
;  (127) End NameExpr
	getfield Queue/max I
;  (127) End FieldRef
	if_icmplt L10
	iconst_0
	goto L11
L10:
	iconst_1
L11:
;  (127) End BinaryExpr
	ifeq L9
;  (128) Expression Statement
;  (128) Invocation
;  (128) Field Reference
;  (128) Name Expression --
	aload_1
;  (128) End NameExpr
	getfield Queue/data LElist;
;  (128) End FieldRef
;  (128) Field Reference
;  (128) Name Expression --
	aload_1
;  (128) End NameExpr
	getfield Queue/size I
;  (128) End FieldRef
;  (128) New
	new Element
	dup
;  (128) Name Expression --
	aload_2
;  (128) End NameExpr
;  (128) Name Expression --
	iload_3
;  (128) End NameExpr
	invokespecial Element/<init>(LIntVector;I)V
;  (128) End New
	invokevirtual Elist/put(ILElement;)V
;  (128) End Invocation
;  (128) End ExprStat
;  (129) Expression Statement
;  (129) Assignment
;  (129) Name Expression --
	aload_1
;  (129) End NameExpr
;  (129) Binary Expression
;  (129) Field Reference
;  (129) Name Expression --
	aload_1
;  (129) End NameExpr
	getfield Queue/size I
;  (129) End FieldRef
;  (129) Literal
	iconst_1
;  (129) End Literal
	iadd
;  (129) End BinaryExpr
	putfield Queue/size I
;  (129) End Assignment
;  (129) End ExprStat
;  (130) Expression Statement
;  (130) Invocation
	aload_0
;  (130) Name Expression --
	aload_1
;  (130) End NameExpr
;  (130) Binary Expression
;  (130) Field Reference
;  (130) Name Expression --
	aload_1
;  (130) End NameExpr
	getfield Queue/size I
;  (130) End FieldRef
;  (130) Literal
	iconst_1
;  (130) End Literal
	isub
;  (130) End BinaryExpr
	invokevirtual IntVectorPri/up(LQueue;I)V
;  (130) End Invocation
;  (130) End ExprStat
L9:
;  (127) End IfStat
	return
.end method

.method public down(LQueue;I)V
	.limit stack 50
	.limit locals 5
;  (134) Method Declaration (down)
;  (136) Expression Statement
;  (136) Assignment
;  (136) Binary Expression
;  (136) Binary Expression
;  (136) Literal
	iconst_2
;  (136) End Literal
;  (136) Name Expression --
	iload_2
;  (136) End NameExpr
	imul
;  (136) End BinaryExpr
;  (136) Literal
	iconst_1
;  (136) End Literal
	iadd
;  (136) End BinaryExpr
	istore_3
;  (136) End Assignment
;  (136) End ExprStat
;  (137) If Statement
;  (137) Binary Expression
;  (137) Name Expression --
	iload_3
;  (137) End NameExpr
;  (137) Field Reference
;  (137) Name Expression --
	aload_1
;  (137) End NameExpr
	getfield Queue/size I
;  (137) End FieldRef
	if_icmplt L13
	iconst_0
	goto L14
L13:
	iconst_1
L14:
;  (137) End BinaryExpr
	ifeq L12
;  (138) If Statement
;  (138) Binary Expression
;  (138) Binary Expression
;  (138) Name Expression --
	iload_3
;  (138) End NameExpr
;  (138) Binary Expression
;  (138) Field Reference
;  (138) Name Expression --
	aload_1
;  (138) End NameExpr
	getfield Queue/size I
;  (138) End FieldRef
;  (138) Literal
	iconst_1
;  (138) End Literal
	isub
;  (138) End BinaryExpr
	if_icmplt L16
	iconst_0
	goto L17
L16:
	iconst_1
L17:
;  (138) End BinaryExpr
	dup
	ifeq L18
	pop
;  (138) Binary Expression
;  (138) Field Reference
;  (138) Invocation
;  (138) Field Reference
;  (138) Name Expression --
	aload_1
;  (138) End NameExpr
	getfield Queue/data LElist;
;  (138) End FieldRef
;  (138) Binary Expression
;  (138) Name Expression --
	iload_3
;  (138) End NameExpr
;  (138) Literal
	iconst_1
;  (138) End Literal
	iadd
;  (138) End BinaryExpr
	invokevirtual Elist/get(I)LElement;
;  (138) End Invocation
	getfield Element/key I
;  (138) End FieldRef
;  (138) Field Reference
;  (138) Invocation
;  (138) Field Reference
;  (138) Name Expression --
	aload_1
;  (138) End NameExpr
	getfield Queue/data LElist;
;  (138) End FieldRef
;  (138) Name Expression --
	iload_3
;  (138) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (138) End Invocation
	getfield Element/key I
;  (138) End FieldRef
	if_icmplt L19
	iconst_0
	goto L20
L19:
	iconst_1
L20:
;  (138) End BinaryExpr
L18:
;  (138) End BinaryExpr
	ifeq L15
;  (139) Expression Statement
;  (139) Unary Post Expression
;  (139) Name Expression --
	iload_3
;  (139) End NameExpr
	iinc 3 1
;  (139) End UnaryPostExpr
	pop
;  (139) End ExprStat
L15:
;  (138) End IfStat
;  (140) If Statement
;  (140) Binary Expression
;  (140) Field Reference
;  (140) Invocation
;  (140) Field Reference
;  (140) Name Expression --
	aload_1
;  (140) End NameExpr
	getfield Queue/data LElist;
;  (140) End FieldRef
;  (140) Name Expression --
	iload_3
;  (140) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (140) End Invocation
	getfield Element/key I
;  (140) End FieldRef
;  (140) Field Reference
;  (140) Invocation
;  (140) Field Reference
;  (140) Name Expression --
	aload_1
;  (140) End NameExpr
	getfield Queue/data LElist;
;  (140) End FieldRef
;  (140) Name Expression --
	iload_2
;  (140) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (140) End Invocation
	getfield Element/key I
;  (140) End FieldRef
	if_icmplt L22
	iconst_0
	goto L23
L22:
	iconst_1
L23:
;  (140) End BinaryExpr
	ifeq L21
;  (141) Local Variable Declaration
;  (141) Invocation
;  (141) Field Reference
;  (141) Name Expression --
	aload_1
;  (141) End NameExpr
	getfield Queue/data LElist;
;  (141) End FieldRef
;  (141) Name Expression --
	iload_2
;  (141) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (141) End Invocation
	astore 4
;  (141) End LocalDecl
;  (142) Expression Statement
;  (142) Invocation
;  (142) Field Reference
;  (142) Name Expression --
	aload_1
;  (142) End NameExpr
	getfield Queue/data LElist;
;  (142) End FieldRef
;  (142) Name Expression --
	iload_2
;  (142) End NameExpr
;  (142) Invocation
;  (142) Field Reference
;  (142) Name Expression --
	aload_1
;  (142) End NameExpr
	getfield Queue/data LElist;
;  (142) End FieldRef
;  (142) Name Expression --
	iload_3
;  (142) End NameExpr
	invokevirtual Elist/get(I)LElement;
;  (142) End Invocation
	invokevirtual Elist/put(ILElement;)V
;  (142) End Invocation
;  (142) End ExprStat
;  (143) Expression Statement
;  (143) Invocation
;  (143) Field Reference
;  (143) Name Expression --
	aload_1
;  (143) End NameExpr
	getfield Queue/data LElist;
;  (143) End FieldRef
;  (143) Name Expression --
	iload_3
;  (143) End NameExpr
;  (143) Name Expression --
	aload 4
;  (143) End NameExpr
	invokevirtual Elist/put(ILElement;)V
;  (143) End Invocation
;  (143) End ExprStat
;  (144) Expression Statement
;  (144) Invocation
	aload_0
;  (144) Name Expression --
	aload_1
;  (144) End NameExpr
;  (144) Name Expression --
	iload_3
;  (144) End NameExpr
	invokevirtual IntVectorPri/down(LQueue;I)V
;  (144) End Invocation
;  (144) End ExprStat
L21:
;  (140) End IfStat
L12:
;  (137) End IfStat
	return
.end method

.method public deleteBest(LQueue;)LElement;
	.limit stack 50
	.limit locals 4
;  (149) Method Declaration (deleteBest)
;  (150) If Statement
;  (150) Binary Expression
;  (150) Field Reference
;  (150) Name Expression --
	aload_1
;  (150) End NameExpr
	getfield Queue/size I
;  (150) End FieldRef
;  (150) Literal
	iconst_0
;  (150) End Literal
	if_icmpgt L25
	iconst_0
	goto L26
L25:
	iconst_1
L26:
;  (150) End BinaryExpr
	ifeq L24
;  (151) Local Variable Declaration
;  (151) Invocation
;  (151) Field Reference
;  (151) Name Expression --
	aload_1
;  (151) End NameExpr
	getfield Queue/data LElist;
;  (151) End FieldRef
;  (151) Literal
	iconst_0
;  (151) End Literal
	invokevirtual Elist/get(I)LElement;
;  (151) End Invocation
	astore_2
;  (151) End LocalDecl
;  (153) Expression Statement
;  (153) Unary Post Expression
;  (153) Name Expression --
	aload_1
;  (153) End NameExpr
	dup
	getfield Queue/size I
	dup_x1
	iconst_1
	isub
	putfield Queue/size I
;  (153) End UnaryPostExpr
	pop
;  (153) End ExprStat
;  (154) If Statement
;  (154) Binary Expression
;  (154) Field Reference
;  (154) Name Expression --
	aload_1
;  (154) End NameExpr
	getfield Queue/size I
;  (154) End FieldRef
;  (154) Literal
	iconst_0
;  (154) End Literal
	if_icmpgt L28
	iconst_0
	goto L29
L28:
	iconst_1
L29:
;  (154) End BinaryExpr
	ifeq L27
;  (155) Local Variable Declaration
;  (155) Invocation
;  (155) Field Reference
;  (155) Name Expression --
	aload_1
;  (155) End NameExpr
	getfield Queue/data LElist;
;  (155) End FieldRef
;  (155) Literal
	iconst_0
;  (155) End Literal
	invokevirtual Elist/get(I)LElement;
;  (155) End Invocation
	astore_3
;  (155) End LocalDecl
;  (156) Expression Statement
;  (156) Invocation
;  (156) Field Reference
;  (156) Name Expression --
	aload_1
;  (156) End NameExpr
	getfield Queue/data LElist;
;  (156) End FieldRef
;  (156) Literal
	iconst_0
;  (156) End Literal
;  (156) Invocation
;  (156) Field Reference
;  (156) Name Expression --
	aload_1
;  (156) End NameExpr
	getfield Queue/data LElist;
;  (156) End FieldRef
;  (156) Field Reference
;  (156) Name Expression --
	aload_1
;  (156) End NameExpr
	getfield Queue/size I
;  (156) End FieldRef
	invokevirtual Elist/get(I)LElement;
;  (156) End Invocation
	invokevirtual Elist/put(ILElement;)V
;  (156) End Invocation
;  (156) End ExprStat
;  (157) Expression Statement
;  (157) Invocation
;  (157) Field Reference
;  (157) Name Expression --
	aload_1
;  (157) End NameExpr
	getfield Queue/data LElist;
;  (157) End FieldRef
;  (157) Field Reference
;  (157) Name Expression --
	aload_1
;  (157) End NameExpr
	getfield Queue/size I
;  (157) End FieldRef
;  (157) Literal
	aconst_null
;  (157) End Literal
	invokevirtual Elist/put(ILElement;)V
;  (157) End Invocation
;  (157) End ExprStat
;  (158) Expression Statement
;  (158) Invocation
	aload_0
;  (158) Name Expression --
	aload_1
;  (158) End NameExpr
;  (158) Literal
	iconst_0
;  (158) End Literal
	invokevirtual IntVectorPri/down(LQueue;I)V
;  (158) End Invocation
;  (158) End ExprStat
L27:
;  (154) End IfStat
;  (160) Return Statement
;  (160) Name Expression --
	aload_2
;  (160) End NameExpr
	areturn
;  (160) End ReturnStat
L24:
;  (150) End IfStat
;  (162) Return Statement
;  (162) Literal
	aconst_null
;  (162) End Literal
	areturn
;  (162) End ReturnStat
.end method

.method public <init>()V
	.limit stack 50
	.limit locals 1
;  (0) Constructor Declaration
;  (0) Explicit Constructor Invocation
	aload_0
	invokespecial java/lang/Object/<init>()V
;  (0) End CInvocation
;  (0) Field Init Generation Start
;  (0) Field Init Generation End
	return
.end method

